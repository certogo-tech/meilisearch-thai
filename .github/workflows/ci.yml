name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: "3.12"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
        test-type: ["unit", "integration"]
    
    services:
      meilisearch:
        image: getmeili/meilisearch:v1.15.2
        env:
          MEILI_MASTER_KEY: test-master-key
          MEILI_ENV: development
        ports:
          - 7700:7700
        options: >-
          --health-cmd "curl -f http://localhost:7700/health || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -r requirements.txt
        uv pip install -e .

    - name: Lint with ruff
      run: |
        uv run ruff check src/ tests/
        uv run ruff format --check src/ tests/

    - name: Type check with mypy
      run: uv run mypy src/

    - name: Run ${{ matrix.test-type }} tests
      run: |
        uv run pytest tests/${{ matrix.test-type }}/ -v \
          --cov=src \
          --cov-report=xml \
          --cov-report=term-missing
      env:
        MEILI_HOST: http://localhost:7700
        MEILI_MASTER_KEY: test-master-key

    - name: Upload coverage to Codecov
      if: matrix.test-type == 'unit'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: ${{ matrix.test-type }}
        name: codecov-${{ matrix.test-type }}

  performance-tests:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    services:
      meilisearch:
        image: getmeili/meilisearch:v1.15.2
        env:
          MEILI_MASTER_KEY: test-master-key
          MEILI_ENV: development
        ports:
          - 7700:7700
        options: >-
          --health-cmd "curl -f http://localhost:7700/health || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -r requirements.txt
        uv pip install -e .

    - name: Run performance tests
      run: |
        uv run pytest tests/performance/ -v \
          --tb=short
      env:
        MEILI_HOST: http://localhost:7700
        MEILI_MASTER_KEY: test-master-key

    - name: Upload performance results
      uses: actions/upload-artifact@v4
      with:
        name: performance-results
        path: reports/performance/

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -r requirements.txt

    - name: Run security scan with bandit
      run: |
        uv pip install bandit[toml]
        uv run bandit -r src/ -f json -o security-report.json || true

    - name: Upload security results
      uses: actions/upload-artifact@v4
      with:
        name: security-results
        path: security-report.json