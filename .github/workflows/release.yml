name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -r requirements.txt
        uv pip install -e .

    - name: Run full test suite
      run: |
        uv run pytest tests/ -v \
          --cov=src \
          --cov-report=xml \
          --cov-report=html
      env:
        MEILI_HOST: http://localhost:7700
        MEILI_MASTER_KEY: test-master-key

    - name: Generate changelog
      id: changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate changelog (you can customize this)
        echo "## Changes in $VERSION" > CHANGELOG.md
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> CHANGELOG.md
        
        # Read changelog content
        CHANGELOG=$(cat CHANGELOG.md)
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.changelog.outputs.version }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: ${{ contains(github.ref, '-') }}

    - name: Upload test coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ steps.changelog.outputs.version }}
        path: htmlcov/

    - name: Upload performance reports
      uses: actions/upload-artifact@v4
      with:
        name: performance-reports-${{ steps.changelog.outputs.version }}
        path: reports/performance/

  build-documentation:
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install documentation dependencies
      run: |
        pip install mkdocs mkdocs-material mkdocs-mermaid2-plugin

    - name: Build documentation
      run: |
        # Create mkdocs.yml if it doesn't exist
        if [ ! -f mkdocs.yml ]; then
          cat > mkdocs.yml << EOF
        site_name: Thai Tokenizer for MeiliSearch
        site_description: Custom Thai tokenizer for MeiliSearch compound word handling
        
        nav:
          - Home: index.md
          - API Documentation: api/index.md
          - Deployment Guide: deployment/index.md
          - Development Guide: development/index.md
          - Architecture: architecture/index.md
        
        theme:
          name: material
          features:
            - navigation.tabs
            - navigation.sections
            - toc.integrate
        
        plugins:
          - search
          - mermaid2
        
        markdown_extensions:
          - admonition
          - codehilite
          - toc:
              permalink: true
        EOF
        fi
        
        # Copy docs to mkdocs structure
        cp -r docs/* .
        
        # Build documentation
        mkdocs build

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site